model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
return(resmat)
}
test = ivi_group_discrete(data,netvars,'Country',countries)
data = data[which(data['Country']==countries[i,]),]
table(data$Country)
netvars
data[,netvars]
ega <-
EGA(data[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
ega
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
data = data[which(data['Country']==countries[i,]),]
test = ivi_group_discrete(data,netvars,'Country',countries)
data = data[which(data['Country']==countries[2,]),]
View(countries)
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
return(resmat)
}
test = ivi_group_discrete(data,netvars,'Country',countries)
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
return(resmat)
}
test = ivi_group_discrete(data,netvars,'Country',countries)
resmat = matrix(0,nrow(countries),length(netvars))
i = 1
datai = data[which(data[filtervar]==filter[i,]),]
datai = data[which(data['Country']==countries[i,]),]
load('data-clean/data-clean.Rds')
datai = data[which(data['Country']==countries[i,]),]
test = ivi_group_discrete(data,netvars,'Country',countries)
warnings()
View(test)
countries
rownames(test)<-countries
t(countries)
rownames(test)
as.array(countries)
list(countries)
t(list(countries))
rownames(test) = list(countries)
countries[1,]
countries[,1]
t(countries[,1])
rownames(test) <- (countries[,1]
)
test = ivi_group_discrete(data,netvars,'Country',countries)
View(test)
rownames(test) <- (countries[,1]
)
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = FALSE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
return(resmat)
}
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = FALSE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
rownames(resmat) <- (filter[,1]
return(resmat)
}
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = FALSE,
mode='all',
weights=E(g)$weights,
d = 3
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
rownames(resmat) <- (filter[,1])
return(resmat)
}
test = ivi_group_discrete(data,netvars,'Country',countries)
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 2
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
rownames(resmat) <- (filter[,1])
return(resmat)
}
test = ivi_group_discrete(data,netvars,'Country',countries)
write_csv(ivi_cntry,file='output/ivi-country.csv')
ivi_cntry <- ivi_group_discrete(data,netvars,'Country',countries)
write_csv(ivi_cntry,file='output/ivi-country.csv')
ega <-
EGA(data[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 2
)
ivi
png(filename = 'figures/02-ivi-full-v2.png',width = 2000,height=2000,res=300)
cent_network.vis(
graph = g,
cent.metric = ivi,
directed = FALSE,
plot.title = "Belief Network - Complete ESS R9 dataset",
weighted = TRUE,
legend.title = "IVI value",
layout = 'fr',
dist.power = 0.4,
node.size.min = 22,
node.size.max = 40,
node.color = 'C',
label.color = 'black',
label.cex = 0.13,
stroke.color = 'black',
stroke.size=2,
show.labels = TRUE,
)
dev.off()
View(ivi_cntry)
ivi_cntry$Politicians
library(ggplot2)
rownames(ivi_cntry)
ggplot(aes(x=rownames(ivi_cntry),y=ivi_cntry$Politicians))
ggplot(ivi_cntry,aes(x=rownames(ivi_cntry),y=ivi_cntry$Politicians))
ggplot(ivi_cntry,aes(x=rownames(ivi_cntry),y=ivi_cntry$Politicians)) + geom_line()
ggplot(ivi_cntry,aes(y=Politicians)) + geom_line()
View(countries)
View(ivi_cntry)
ggplot(ivi_cntry,aes(y=Politicians)) + geom_line()
ggplot(ivi_cntry,aes(x=Countries,y=Politicians)) + geom_line()
ggplot(ivi_cntry,aes(x=countries,y=Politicians)) + geom_line()
ggplot(ivi_cntry,aes(x=countries[,1],y=Politicians)) + geom_line()
x = [[countries[,1]],[ivi_cntry$Politicians]]
x = [[countries[,1],[ivi_cntry$Politicians]]
as.data.frame(c(countries[,1],ivi_cntry$Politicians))
cbind(countries[,1],ivi_cntry$Politicians)
cbind(countries[,1],ivi_cntry)
colnames(cbind(countries[,1],ivi_cntry))
colnames(pdata)[1] = 'Country'
pdata <- cbind(countries[,1],ivi_cntry)
colnames(pdata)[1] = 'Country'
pdata
ggplot(pdata,aes(x=Country,y=Politicians)) + geom_line()
ggplot(pdata,aes(x=Country,y=Politicians,group=1)) + geom_line()
pdata %>% arrange(desc(Politicians))
pdata %>% arrange(desc(Politicians)) %>% ggplot(aes(x=Country,y=Politicians,group=1)) + geom_line()
pdata %>% arrange(desc(Politicians)) %>% ggplot(aes(x=Country,y=Politicians,group=1)) + geom_line()
pdata %>% ggplot(aes(x=reorder(Country,-Politicians),y=Politicians,group=1)) + geom_line()
pdata %>% ggplot(aes(x=reorder(Country,-Politicians),y=Politicians,group=1)) + geom_bar()
pdata %>% ggplot(aes(
x = reorder(Country, -Politicians),
y = Politicians,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Politicians),
y = Politicians,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Politicians),
y = Politicians,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Trust in Politicians")
rowSums
rowSums(ivi_cntry)
pdata %>% ggplot(aes(
x = reorder(Country, Health),
y = Health,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Trust in Politicians")
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Health),
y = Health,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Satifaction with healthcare")
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Economy),
y = Economy,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Satifaction with the economy")
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Economy),
y = Economy,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Satifaction with the Economy")
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Economy),
y = Economy,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Satifaction with the Democracy")
theme_bw()
pdata %>% ggplot(aes(
x = reorder(Country, Democracy),
y = Democracy,
group = 1
))  +geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
ylab("IVI of Satifaction with the Democracy")
theme_bw()
ivi_row <- ivi_group_discrete(data,netvars,'ROW',row)
row(t)
t(row)
as.data.frame(row)
as.data.frame(c(1,2,3))
row = as.data.frame(c(1,2,3))
ivi_row <- ivi_group_discrete(data,netvars,'ROW',row)
View(ivi_row)
unique(data$Class5)
ivi_class <- ivi_group_discrete(data,netvars,'Class5',classes)
classes = as.data.frame(unique(data$Class5))
ivi_class <- ivi_group_discrete(data,netvars,'Class5',classes)
classes=levels(data$Class5)
classes
as.data.frame(classes)
ivi_class <- ivi_group_discrete(data,netvars,'Class5',classes)
classes = as.data.frame(levels)
nrow(classes)
classes
classes = as.data.frame(levels(data$Class5))
ivi_class <- ivi_group_discrete(data,netvars,'Class5',classes)
View(classes)
View(ivi_class)
classes = as.data.frame(levels(data$Class8))
ivi_class <- ivi_group_discrete(data,netvars,'Class8',classes)
ivi_group_discrete <- function(data,netvars,filtervar,filter)
{
labels=colnames(data)
resmat = matrix(0,nrow(filter),length(netvars))
for (i in 1:nrow(filter))
{
datai = data[which(data[filtervar]==filter[i,]),]
ega <-
EGA(datai[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d = 1
)
resmat[i,] = ivi
}
resmat = as.data.frame(resmat)
colnames(resmat)<-rownames(as.data.frame(ivi))
rownames(resmat) <- (filter[,1])
return(resmat)
}
classes = as.data.frame(levels(data$Class5))
ivi_class <- ivi_group_discrete(data,netvars,'Class5',classes)
row = as.data.frame(c(1,2,3))
ivi_row <- ivi_group_discrete(data,netvars,'ROW',row)
write_csv(ivi_row,file='output/ivi-row.csv')
ega <-
EGA(data[, netvars],
model = 'glasso',
algorithm = 'louvain',
plot.EGA = FALSE)
g <-  graph_from_adjacency_matrix(ega$network,
weighted = TRUE,
mode = "undirected")
g_v <- V(g)
ivi <- ivi(
graph = g,
vertices = g_v,
directed = FALSE,
scaled = TRUE,
mode='all',
weights=E(g)$weights,
d =1
)
png(filename = 'figures/02-ivi-full-v2.png',width = 2000,height=2000,res=300)
cent_network.vis(
graph = g,
cent.metric = ivi,
directed = FALSE,
plot.title = "Belief Network - Complete ESS R9 dataset",
weighted = TRUE,
legend.title = "IVI value",
layout = 'fr',
dist.power = 0.4,
node.size.min = 22,
node.size.max = 40,
node.color = 'C',
label.color = 'black',
label.cex = 0.13,
stroke.color = 'black',
stroke.size=2,
show.labels = TRUE,
)
dev.off()
